{
  "bench_run": {
    "id": "16556901122",
    "html_url": "https://github.com/enso-org/enso/actions/runs/16556901122",
    "run_attempt": 1,
    "event": "schedule",
    "display_title": "Benchmark Engine",
    "head_commit": {
      "id": "3c3692329588aba6eb96ecb3a7d900a2e39c80f9",
      "message": "SocketAppender always forwards telemetry events (#13645)\n\nThere was a regression - no telemetry was sent to the open search server. This PR fixes this regression by ensuring that telemetry events are always accepted and forwarded to the server.\n\n# Important Notes\n- I suspect that the regression was caused by #13049, but I was not able to confirm that.\n\n-------------------\n\n- [logging-service/server/log-to-file/log-level in project-manager/application.conf](https://github.com/enso-org/enso/blob/2e9cf92837022f030ccd327109bb6f4d7072c6cf/lib/scala/project-manager/src/main/resources/application.conf#L71) is written into [org.enso.logging.service.LoggingServiceManager#currentLevel](https://github.com/enso-org/enso/blob/566d3d503e35ccf8c363facd590d1332683bce3a/lib/scala/logging-service/src/main/java/org/enso/logging/service/LoggingServiceManager.java#L36) when project-manager is started.\n- This field is later used as a value to `--log-level` cmd line option when language server is started from [project-manager](https://github.com/enso-org/enso/blob/2f2747361254aa8892eb8b5c1bd24b10e7eca9b3/lib/scala/project-manager/src/main/scala/org/enso/projectmanager/infrastructure/languageserver/ExecutorWithUnlimitedPool.scala#L125).\n- So when set to `debug` (the current default), the language-server is started with `--log-level debug`.\n- Which means that `LoggerFactory.get(\"foo\").trace(...)` will not be sent through the socket appender from language-server.\n- Note that language server uses a [single socket appender](https://github.com/enso-org/enso/blob/7dcbff420849e00a85e6768616f369e1e03f1589/engine/language-server/src/main/resources/application.conf#L52-L58) to sent the logs to the project-manager's logging server.\n- And because all the telemetry logging is done via `trace`, no telemetry events are sent through the socket appender.\n\n------------\n\n- My solution is to [setup the socket appender](https://github.com/enso-org/enso/blob/962c0566bd1db927f93c110fc7bc95ab8ebf8d85/lib/scala/logging-service-logback/src/main/java/org/enso/logging/service/logback/LogbackSetup.java#L143) in language server, such that all telemetry events are never dropped.\n\n-------------\nNote that:\n```diff\ndiff --git a/engine/language-server/src/main/resources/application.conf b/engine/language-server/src/main/resources/application.conf\nindex bef31a61f6..b9d068ed6e 100644\n--- a/engine/language-server/src/main/resources/application.conf\n+++ b/engine/language-server/src/main/resources/application.conf\n@@ -47,6 +47,7 @@ logging-service {\norg.enso.interpreter.runtime.HostClassLoader = error\njava.lang.ProcessBuilder = warn\nStandard.Base.Logging.Progress = error\n+    org.enso.telemetry = trace\n}\nappenders = [\n{\n```\nalso fixes the issue, but feels fragile.",
      "timestamp": "2025-07-25T20:53:05Z",
      "author": {
        "name": "Pavel Marek"
      }
    }
  },
  "label_score_dict": {
    "org.enso.compiler.benchmarks.exportimport.ExportImportResolutionBenchmark.importsAndExportsResolution": 2.1662580248035863,
    "org.enso.compiler.benchmarks.exportimport.ExportImportResolutionBenchmark.importsResolution": 0.24219565557934394,
    "org.enso.compiler.benchmarks.inline.InlineCompilerBenchmark.longExpression": 67.91817164688663,
    "org.enso.compiler.benchmarks.inline.InlineCompilerErrorBenchmark.expressionWithErrors": 68.70242756507923,
    "org.enso.compiler.benchmarks.module.ImportStandardLibrariesBenchmark.importStandardLibraries": 66.17439089864718,
    "org.enso.compiler.benchmarks.module.ManyErrorsBenchmark.manyErrors": 20.757091039349167,
    "org.enso.compiler.benchmarks.module.ManyLocalVarsBenchmark.longMethodWithLotOfLocalVars": 6.717678217159661,
    "org.enso.compiler.benchmarks.module.ManyNestedBlocksBenchmark.manyNestedBlocks": 10.970010519684724,
    "org.enso.compiler.benchmarks.module.ManySmallMethodsBenchmark.manySmallMethods": 41.90198693259239,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverComputingProxy": 0.12157124641518424,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverDelegatingProxy": 0.19480753887124153,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverVector": 0.08217743221895377,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverVectorBackedByComputingProxy": 0.1216346294992704,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverVectorBackedByDelegatingProxy": 0.19486234459797197,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchGenerateList": 3.719264281991993,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchGenerateListAutoscoping": 23.80650835503716,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchGenerateListQualified": 3.6903653405715793,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchMapReverseList": 7.1442509594792885,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchMapReverseListCurry": 7.107874806274381,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchReverseList": 5.763372617426352,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchReverseListMethods": 7.059316618902281,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchSumList": 3.95915879532397,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchSumListFallback": 3.8182515253738103,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchSumListLeftFold": 4.748718282260931,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchSumListMethods": 4.288670046491971,
    "org.enso.interpreter.bench.benchmarks.semantic.CallableBenchmarks.benchSumTCOfromCall": 85.13833714915253,
    "org.enso.interpreter.bench.benchmarks.semantic.CallableBenchmarks.benchSumTCOmethodCall": 85.06701579830508,
    "org.enso.interpreter.bench.benchmarks.semantic.CallableBenchmarks.benchSumTCOmethodCallWithDefaultedArguments": 85.15281538644068,
    "org.enso.interpreter.bench.benchmarks.semantic.CallableBenchmarks.benchSumTCOmethodCallWithNamedArguments": 85.09641987457626,
    "org.enso.interpreter.bench.benchmarks.semantic.EqualsBenchmarks.equalsPrimitives": 0.16140025376946518,
    "org.enso.interpreter.bench.benchmarks.semantic.EqualsBenchmarks.equalsStrings": 0.07796639232997071,
    "org.enso.interpreter.bench.benchmarks.semantic.EqualsBenchmarks.equalsTrees": 1.014565498593031,
    "org.enso.interpreter.bench.benchmarks.semantic.EqualsBenchmarks.equalsWithConversion": 3.602533039982386,
    "org.enso.interpreter.bench.benchmarks.semantic.IfVsCaseBenchmarks.caseBench3": 1.3729641027001491,
    "org.enso.interpreter.bench.benchmarks.semantic.IfVsCaseBenchmarks.caseBench6": 0.7101228605113193,
    "org.enso.interpreter.bench.benchmarks.semantic.IfVsCaseBenchmarks.ifBench3": 1.281364473892057,
    "org.enso.interpreter.bench.benchmarks.semantic.IfVsCaseBenchmarks.ifBench6": 0.6878554959240537,
    "org.enso.interpreter.bench.benchmarks.semantic.IfVsCaseBenchmarks.ifBench6In": 2.0791632843025596,
    "org.enso.interpreter.bench.benchmarks.semantic.ListBenchmarks.mapAnyOverList": 65.89236594110767,
    "org.enso.interpreter.bench.benchmarks.semantic.ListBenchmarks.mapConvOverList": 65.79478699037668,
    "org.enso.interpreter.bench.benchmarks.semantic.ListBenchmarks.mapIntegerOverList": 67.80613040988572,
    "org.enso.interpreter.bench.benchmarks.semantic.ListBenchmarks.mapMultiOverList": 68.46843933962353,
    "org.enso.interpreter.bench.benchmarks.semantic.ListBenchmarks.mapOverLazyList": 85.96762485570716,
    "org.enso.interpreter.bench.benchmarks.semantic.ListBenchmarks.mapOverList": 67.78285789043017,
    "org.enso.interpreter.bench.benchmarks.semantic.ListBenchmarks.mapVConvertThatArgumentOfPlus": 73.06450565545356,
    "org.enso.interpreter.bench.benchmarks.semantic.ListBenchmarks.mapVOverList": 65.89998315025372,
    "org.enso.interpreter.bench.benchmarks.semantic.MultiValueBenchmarks.sumOverComplexAndFloat5": 1.3823818646651942,
    "org.enso.interpreter.bench.benchmarks.semantic.MultiValueBenchmarks.sumOverComplexBaseBenchmark0": 0.2705210250578441,
    "org.enso.interpreter.bench.benchmarks.semantic.MultiValueBenchmarks.sumOverComplexFloatRecastedToFloat3": 1.5206866403375607,
    "org.enso.interpreter.bench.benchmarks.semantic.MultiValueBenchmarks.sumOverFloat2": 0.09767983910204013,
    "org.enso.interpreter.bench.benchmarks.semantic.MultiValueBenchmarks.sumOverFloatAndComplex6": 1.4323262075804637,
    "org.enso.interpreter.bench.benchmarks.semantic.MultiValueBenchmarks.sumOverFloatComplexRecastedToFloat4": 1.4509961986426145,
    "org.enso.interpreter.bench.benchmarks.semantic.MultiValueBenchmarks.sumOverInteger1": 0.08236595588140383,
    "org.enso.interpreter.bench.benchmarks.semantic.NamedDefaultedArgumentBenchmarks.benchSumTCOWithDefaultArgs": 85.12625317118645,
    "org.enso.interpreter.bench.benchmarks.semantic.NamedDefaultedArgumentBenchmarks.benchSumTCOWithNamedArgs": 85.11711290677967,
    "org.enso.interpreter.bench.benchmarks.semantic.NestedPatternCompilationBenchmarks.sumList": 0.09384189206599548,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchNestedThunkSum": 121.6439390554217,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchOversaturatedRecursiveCall": 85.13913926101694,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumRecursive": 0.0009738552962815042,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumStateTCO": 126.32488689794305,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumTCO": 85.13615925084746,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumTCOFoldLike": 85.1577420898305,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumTCOWithEval": 85.14522929322034,
    "org.enso.interpreter.bench.benchmarks.semantic.StringBenchmarks.lengthOfStrings": 0.002748529380760494,
    "org.enso.interpreter.bench.benchmarks.semantic.TypePatternBenchmarks.matchOverAny": 0.0006030989217682767,
    "org.enso.interpreter.bench.benchmarks.semantic.TypePatternBenchmarks.matchOverDecimal": 0.0005959441410857991,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageAbstractList": 0.07580942972204929,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverArray": 0.0020201752760632486,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverArrayProxy": 0.002242419464624202,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverArrayProxyNew": 0.0022508911119402983,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverPolyglotArray": 0.0015275151846207136,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverPolyglotVector": 0.0020211188861381088,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverSlice": 0.001402083560569494,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverSliceWrapped10": 0.006924927663849415,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverSliceWrapped100": 0.006999065239481191,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverVector": 0.001998247842295621,
    "org.enso.interpreter.bench.benchmarks.semantic.WarningBenchmarks.diffWarningRandomElementsVecSum": 0.32104875279404305,
    "org.enso.interpreter.bench.benchmarks.semantic.WarningBenchmarks.noWarningsVecSum": 0.008229902875696847,
    "org.enso.interpreter.bench.benchmarks.semantic.WarningBenchmarks.randomElementsVecSum": 0.03478089011187497,
    "org.enso.interpreter.bench.benchmarks.semantic.WarningBenchmarks.sameWarningVecSum": 1.7884622087755462
  }
}