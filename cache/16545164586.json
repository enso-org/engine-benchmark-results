{
  "bench_run": {
    "id": "16545164586",
    "html_url": "https://github.com/enso-org/enso/actions/runs/16545164586",
    "run_attempt": 1,
    "event": "schedule",
    "display_title": "Benchmark Engine",
    "head_commit": {
      "id": "3c3692329588aba6eb96ecb3a7d900a2e39c80f9",
      "message": "SocketAppender always forwards telemetry events (#13645)\n\nThere was a regression - no telemetry was sent to the open search server. This PR fixes this regression by ensuring that telemetry events are always accepted and forwarded to the server.\n\n# Important Notes\n- I suspect that the regression was caused by #13049, but I was not able to confirm that.\n\n-------------------\n\n- [logging-service/server/log-to-file/log-level in project-manager/application.conf](https://github.com/enso-org/enso/blob/2e9cf92837022f030ccd327109bb6f4d7072c6cf/lib/scala/project-manager/src/main/resources/application.conf#L71) is written into [org.enso.logging.service.LoggingServiceManager#currentLevel](https://github.com/enso-org/enso/blob/566d3d503e35ccf8c363facd590d1332683bce3a/lib/scala/logging-service/src/main/java/org/enso/logging/service/LoggingServiceManager.java#L36) when project-manager is started.\n- This field is later used as a value to `--log-level` cmd line option when language server is started from [project-manager](https://github.com/enso-org/enso/blob/2f2747361254aa8892eb8b5c1bd24b10e7eca9b3/lib/scala/project-manager/src/main/scala/org/enso/projectmanager/infrastructure/languageserver/ExecutorWithUnlimitedPool.scala#L125).\n- So when set to `debug` (the current default), the language-server is started with `--log-level debug`.\n- Which means that `LoggerFactory.get(\"foo\").trace(...)` will not be sent through the socket appender from language-server.\n- Note that language server uses a [single socket appender](https://github.com/enso-org/enso/blob/7dcbff420849e00a85e6768616f369e1e03f1589/engine/language-server/src/main/resources/application.conf#L52-L58) to sent the logs to the project-manager's logging server.\n- And because all the telemetry logging is done via `trace`, no telemetry events are sent through the socket appender.\n\n------------\n\n- My solution is to [setup the socket appender](https://github.com/enso-org/enso/blob/962c0566bd1db927f93c110fc7bc95ab8ebf8d85/lib/scala/logging-service-logback/src/main/java/org/enso/logging/service/logback/LogbackSetup.java#L143) in language server, such that all telemetry events are never dropped.\n\n-------------\nNote that:\n```diff\ndiff --git a/engine/language-server/src/main/resources/application.conf b/engine/language-server/src/main/resources/application.conf\nindex bef31a61f6..b9d068ed6e 100644\n--- a/engine/language-server/src/main/resources/application.conf\n+++ b/engine/language-server/src/main/resources/application.conf\n@@ -47,6 +47,7 @@ logging-service {\norg.enso.interpreter.runtime.HostClassLoader = error\njava.lang.ProcessBuilder = warn\nStandard.Base.Logging.Progress = error\n+    org.enso.telemetry = trace\n}\nappenders = [\n{\n```\nalso fixes the issue, but feels fragile.",
      "timestamp": "2025-07-25T20:53:05Z",
      "author": {
        "name": "Pavel Marek"
      }
    }
  },
  "label_score_dict": {
    "org.enso.compiler.benchmarks.exportimport.ExportImportResolutionBenchmark.importsAndExportsResolution": 2.1567660556050146,
    "org.enso.compiler.benchmarks.exportimport.ExportImportResolutionBenchmark.importsResolution": 0.24750765428645966,
    "org.enso.compiler.benchmarks.inline.InlineCompilerBenchmark.longExpression": 67.90929253749928,
    "org.enso.compiler.benchmarks.inline.InlineCompilerErrorBenchmark.expressionWithErrors": 67.6649414952903,
    "org.enso.compiler.benchmarks.module.ImportStandardLibrariesBenchmark.importStandardLibraries": 69.17843003433468,
    "org.enso.compiler.benchmarks.module.ManyErrorsBenchmark.manyErrors": 20.741793739162556,
    "org.enso.compiler.benchmarks.module.ManyLocalVarsBenchmark.longMethodWithLotOfLocalVars": 6.75682402446466,
    "org.enso.compiler.benchmarks.module.ManyNestedBlocksBenchmark.manyNestedBlocks": 11.004763450231923,
    "org.enso.compiler.benchmarks.module.ManySmallMethodsBenchmark.manySmallMethods": 42.33016398725238,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverComputingProxy": 0.12141581688758465,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverDelegatingProxy": 0.19477433452823703,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverVector": 0.08213160984590244,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverVectorBackedByComputingProxy": 0.12167024539621493,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverVectorBackedByDelegatingProxy": 0.19462820048083324,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchGenerateList": 3.822567158524888,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchGenerateListAutoscoping": 24.26466326190202,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchGenerateListQualified": 3.6760779214487855,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchMapReverseList": 5.970353889267533,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchMapReverseListCurry": 6.110784423410965,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchReverseList": 5.64404947372671,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchReverseListMethods": 5.769800787332454,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchSumList": 3.646981167267208,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchSumListFallback": 4.074082497491149,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchSumListLeftFold": 4.894264993985656,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchSumListMethods": 4.93732200167805,
    "org.enso.interpreter.bench.benchmarks.semantic.CallableBenchmarks.benchSumTCOfromCall": 85.07480690169491,
    "org.enso.interpreter.bench.benchmarks.semantic.CallableBenchmarks.benchSumTCOmethodCall": 85.08929559661019,
    "org.enso.interpreter.bench.benchmarks.semantic.CallableBenchmarks.benchSumTCOmethodCallWithDefaultedArguments": 84.23917655630252,
    "org.enso.interpreter.bench.benchmarks.semantic.CallableBenchmarks.benchSumTCOmethodCallWithNamedArguments": 84.91320153339981,
    "org.enso.interpreter.bench.benchmarks.semantic.EqualsBenchmarks.equalsPrimitives": 0.16026358100871527,
    "org.enso.interpreter.bench.benchmarks.semantic.EqualsBenchmarks.equalsStrings": 0.09259737466676736,
    "org.enso.interpreter.bench.benchmarks.semantic.EqualsBenchmarks.equalsTrees": 1.0432893449786298,
    "org.enso.interpreter.bench.benchmarks.semantic.EqualsBenchmarks.equalsWithConversion": 3.4492973993916447,
    "org.enso.interpreter.bench.benchmarks.semantic.IfVsCaseBenchmarks.caseBench3": 0.4330592830371664,
    "org.enso.interpreter.bench.benchmarks.semantic.IfVsCaseBenchmarks.caseBench6": 0.6929317681872268,
    "org.enso.interpreter.bench.benchmarks.semantic.IfVsCaseBenchmarks.ifBench3": 1.165468005482188,
    "org.enso.interpreter.bench.benchmarks.semantic.IfVsCaseBenchmarks.ifBench6": 0.7275057490850765,
    "org.enso.interpreter.bench.benchmarks.semantic.IfVsCaseBenchmarks.ifBench6In": 2.082374715557993,
    "org.enso.interpreter.bench.benchmarks.semantic.ListBenchmarks.mapAnyOverList": 69.42632275011495,
    "org.enso.interpreter.bench.benchmarks.semantic.ListBenchmarks.mapConvOverList": 67.07668124784787,
    "org.enso.interpreter.bench.benchmarks.semantic.ListBenchmarks.mapIntegerOverList": 69.45520554399425,
    "org.enso.interpreter.bench.benchmarks.semantic.ListBenchmarks.mapMultiOverList": 66.56816775490509,
    "org.enso.interpreter.bench.benchmarks.semantic.ListBenchmarks.mapOverLazyList": 83.27933355171591,
    "org.enso.interpreter.bench.benchmarks.semantic.ListBenchmarks.mapOverList": 67.98814965263834,
    "org.enso.interpreter.bench.benchmarks.semantic.ListBenchmarks.mapVConvertThatArgumentOfPlus": 72.2787566768591,
    "org.enso.interpreter.bench.benchmarks.semantic.ListBenchmarks.mapVOverList": 67.75341292941717,
    "org.enso.interpreter.bench.benchmarks.semantic.MultiValueBenchmarks.sumOverComplexAndFloat5": 1.4513192237238015,
    "org.enso.interpreter.bench.benchmarks.semantic.MultiValueBenchmarks.sumOverComplexBaseBenchmark0": 0.2715577319762881,
    "org.enso.interpreter.bench.benchmarks.semantic.MultiValueBenchmarks.sumOverComplexFloatRecastedToFloat3": 1.4185153244377495,
    "org.enso.interpreter.bench.benchmarks.semantic.MultiValueBenchmarks.sumOverFloat2": 0.09763747990988554,
    "org.enso.interpreter.bench.benchmarks.semantic.MultiValueBenchmarks.sumOverFloatAndComplex6": 1.4419379704469057,
    "org.enso.interpreter.bench.benchmarks.semantic.MultiValueBenchmarks.sumOverFloatComplexRecastedToFloat4": 1.4261741570888604,
    "org.enso.interpreter.bench.benchmarks.semantic.MultiValueBenchmarks.sumOverInteger1": 0.08203991868978976,
    "org.enso.interpreter.bench.benchmarks.semantic.NamedDefaultedArgumentBenchmarks.benchSumTCOWithDefaultArgs": 85.06594779830507,
    "org.enso.interpreter.bench.benchmarks.semantic.NamedDefaultedArgumentBenchmarks.benchSumTCOWithNamedArgs": 85.033023079661,
    "org.enso.interpreter.bench.benchmarks.semantic.NestedPatternCompilationBenchmarks.sumList": 0.09426706758514028,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchNestedThunkSum": 121.32211685281125,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchOversaturatedRecursiveCall": 85.03962168644068,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumRecursive": 0.0009761918047896133,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumStateTCO": 126.3108161920886,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumTCO": 84.59537636131606,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumTCOFoldLike": 85.06438249491525,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumTCOWithEval": 85.08679729830507,
    "org.enso.interpreter.bench.benchmarks.semantic.StringBenchmarks.lengthOfStrings": 0.0027455211794392602,
    "org.enso.interpreter.bench.benchmarks.semantic.TypePatternBenchmarks.matchOverAny": 0.0005790647798053962,
    "org.enso.interpreter.bench.benchmarks.semantic.TypePatternBenchmarks.matchOverDecimal": 0.0005964143595804675,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageAbstractList": 0.07667846843042139,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverArray": 0.002011720050486653,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverArrayProxy": 0.002255488905250308,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverArrayProxyNew": 0.0022484316563116573,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverPolyglotArray": 0.0015333955407164392,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverPolyglotVector": 0.0020174208275112013,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverSlice": 0.0014053875783212027,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverSliceWrapped10": 0.006941310870803005,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverSliceWrapped100": 0.006928164206256171,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverVector": 0.002017381158219853,
    "org.enso.interpreter.bench.benchmarks.semantic.WarningBenchmarks.diffWarningRandomElementsVecSum": 0.32116585824641103,
    "org.enso.interpreter.bench.benchmarks.semantic.WarningBenchmarks.noWarningsVecSum": 0.008246755264119523,
    "org.enso.interpreter.bench.benchmarks.semantic.WarningBenchmarks.randomElementsVecSum": 0.03468337792193241,
    "org.enso.interpreter.bench.benchmarks.semantic.WarningBenchmarks.sameWarningVecSum": 1.7750441140809252
  }
}