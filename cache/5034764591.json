{
  "bench_run": {
    "id": "5034764591",
    "html_url": "https://github.com/enso-org/enso/actions/runs/5034764591",
    "run_attempt": 1,
    "event": "schedule",
    "display_title": "Benchmark Engine",
    "head_commit": {
      "id": "62fecfa474e3958ce6fda54c00ef91a86bfa2c2e",
      "message": "Widgets, Vector as Column, Viz Fixes and Rename Columns (#6768)\n\n- Fix couple of bugs in Table viz: rounding of bottom div, missing character, not including row count as an option.\n- Add better JSON format for `Row`, add support for visualization in the Table viz both for `Vector Row` or `Row`.\n- Fix some type signature errors.\n- Move `Column_Format` to `Standard.Table.Internal`.\n- Move `format_widget` to `File_Format.default_widget` and sort the signature of `Widget` methods.\n- Added utility to make `Single_Choice` widgets.\n- Added dropdown for delimiter on split methods.\n- Removed `default_widget` from `Problem_Behavior` and `Filter_Condition`.\n- Altered signature and widgets for table functions.\n- Added `to_column` extension to allow easy conversion of Range and Vector to Column.\n- Added `compute`, `compute_bulk`, `running` to Column to allow statistic computation.\n- Added drop down for `Table.write` format parameter.\n- Added drop down for `Table.rename_columns`.\n- Added support for Vector of pairs for renaming columns.\n- Added check when making a map from Vector if not 2 items.\n\n![image](https://github.com/enso-org/enso/assets/4699705/beed257c-efe3-44a3-9e3a-041354701735)",
      "timestamp": "2023-05-19T23:24:47Z",
      "author": {
        "name": "James Dunkerley"
      },
      "url": "https://github.com/enso-org/enso/commit/62fecfa474e3958ce6fda54c00ef91a86bfa2c2e"
    }
  },
  "label_score_dict": {
    "org.enso.interpreter.bench.benchmarks.RuntimeCacheBenchmarks.benchCacheGet": 0.004153217969602656,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverComputingProxy": 0.1442075670479535,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverDelegatingProxy": 0.9633743037636064,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverVector": 0.8863350187280539,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverVectorBackedByComputingProxy": 0.14415789161848228,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverVectorBackedByDelegatingProxy": 0.9755236460745987,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchGenerateList": 3.646620449141499,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchGenerateListQualified": 3.682296083835407,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchMapReverseCurryList": 5.898782856104243,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchMapReverseList": 6.821735882716406,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchReverseList": 5.53943719759888,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchReverseListMethods": 6.426381162770973,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchSumList": 5.666805632441674,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchSumListFallback": 6.6695120292710115,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchSumListMethods": 4.373693505529095,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.sumListLeftFold": 5.45576723605558,
    "org.enso.interpreter.bench.benchmarks.semantic.CallableBenchmarks.benchSumTCOfromCall": 96.26523046770225,
    "org.enso.interpreter.bench.benchmarks.semantic.CallableBenchmarks.benchSumTCOmethodCall": 96.2603310255386,
    "org.enso.interpreter.bench.benchmarks.semantic.CallableBenchmarks.benchSumTCOmethodCallWithDefaultedArguments": 96.25614785253813,
    "org.enso.interpreter.bench.benchmarks.semantic.CallableBenchmarks.benchSumTCOmethodCallWithNamedArguments": 96.26355838677765,
    "org.enso.interpreter.bench.benchmarks.semantic.CurriedFunctionBenchmarks.averageCurried": 0.10132649706154877,
    "org.enso.interpreter.bench.benchmarks.semantic.CurriedFunctionBenchmarks.averageLambda": 0.12434843105631632,
    "org.enso.interpreter.bench.benchmarks.semantic.EqualsBenchmarks.equalsPrimitives": 0.15172792708342553,
    "org.enso.interpreter.bench.benchmarks.semantic.EqualsBenchmarks.equalsStrings": 0.08692462742838251,
    "org.enso.interpreter.bench.benchmarks.semantic.EqualsBenchmarks.equalsTrees": 2.6678463956110825,
    "org.enso.interpreter.bench.benchmarks.semantic.IfVsCaseBenchmarks.caseBench3": 0.5292035625157402,
    "org.enso.interpreter.bench.benchmarks.semantic.IfVsCaseBenchmarks.caseBench6": 0.7935187975170894,
    "org.enso.interpreter.bench.benchmarks.semantic.IfVsCaseBenchmarks.ifBench3": 0.5471293774258813,
    "org.enso.interpreter.bench.benchmarks.semantic.IfVsCaseBenchmarks.ifBench6": 1.2430137015117713,
    "org.enso.interpreter.bench.benchmarks.semantic.IfVsCaseBenchmarks.ifBench6In": 1.4426356371810403,
    "org.enso.interpreter.bench.benchmarks.semantic.ListBenchmarks.mapOverLazyList": 107.3245978380074,
    "org.enso.interpreter.bench.benchmarks.semantic.ListBenchmarks.mapOverList": 136.85468190199927,
    "org.enso.interpreter.bench.benchmarks.semantic.NamedDefaultedArgumentBenchmarks.benchSumTCOWithDefaultArgs": 96.26467268741564,
    "org.enso.interpreter.bench.benchmarks.semantic.NamedDefaultedArgumentBenchmarks.benchSumTCOWithNamedArgs": 96.25044859901988,
    "org.enso.interpreter.bench.benchmarks.semantic.NestedPatternCompilationBenchmarks.sumList": 0.16487263132672986,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchNestedThunkSum": 89.52254332892227,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchOversaturatedRecursiveCall": 96.35333604843166,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumRecursive": 0.001032990391316642,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumStateTCO": 89.41372167160497,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumTCO": 96.26867463040222,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumTCOFoldLike": 96.4053492531669,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumTCOWithEval": 96.22745941244567,
    "org.enso.interpreter.bench.benchmarks.semantic.StringBenchmarks.lengthOfStrings": 0.030228601254550763,
    "org.enso.interpreter.bench.benchmarks.semantic.TypePatternBenchmarks.matchOverAny": 0.0010232668174276933,
    "org.enso.interpreter.bench.benchmarks.semantic.TypePatternBenchmarks.matchOverDecimal": 0.0011668341584499364,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageAbstractList": 0.15081930531286297,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverArray": 0.0014830800614040137,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverArrayProxy": 0.0015049517817066528,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverArrayProxyNew": 0.0015390756894681095,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverPolyglotArray": 0.0014928872232229326,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverPolyglotVector": 0.001420048240826328,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverSlice": 0.0018857358486416593,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverVector": 0.0013812613154494291,
    "org.enso.interpreter.bench.benchmarks.semantic.WarningBenchmarks.diffWarningRandomElementsVecSum": 227.51545945970693,
    "org.enso.interpreter.bench.benchmarks.semantic.WarningBenchmarks.noWarningsVecSum": 0.2607894274312574,
    "org.enso.interpreter.bench.benchmarks.semantic.WarningBenchmarks.randomElementsVecSum": 0.2421081166594786,
    "org.enso.interpreter.bench.benchmarks.semantic.WarningBenchmarks.sameWarningVecSum": 3.929938058682605
  }
}