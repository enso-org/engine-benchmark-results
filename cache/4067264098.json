{
  "bench_run": {
    "id": "4067264098",
    "html_url": "https://github.com/enso-org/enso/actions/runs/4067264098",
    "run_attempt": 1,
    "event": "push",
    "display_title": "Cached_shape macro rendered to special texture. (#4089)",
    "head_commit": {
      "id": "a103c8d82f3c1688a4791da31560384acb2399f2",
      "message": "Cached_shape macro rendered to special texture. (#4089)\n\nThis PR contains the first implementation of `cached_shape!` macro, which should help us with reducing draw calls in our application.\n\n```rust\nmod icon1 {\nuse super::*;\nensogl_core::cached_shape! { 32 x 32;\n() {\nlet shape = Circle(16.px()).fill(color::Rgba::green());\nshape.into()\n}\n}\n}\n\nmod icon2 {\nuse super::*;\nensogl_core::cached_shape! { 202 x 312;\n() {\nlet shape = Rect((200.px(), 310.px())).fill(color::Rgba::red());\nshape.into()\n}\n}\n}\n```\n\nThe above code creates two cached shapes. They are similar to normal shapes (created with `shape!` macro), except that:\n1. they do not allow for any parametrization\n2. They are rendered at the application start to the special texture with cached shapes.\n\nThe texture will be used in next PRs to cache all Component Browser icons on the texture and draw all of them just by single, fast draw call. In the future, more shapes can be cached, further reducing draw calls and making them simple.\n\n# Important Notes\nThe results are presented in `cached_shapes` debug scene: there are two shapes displayed and a scaled cached texture is displayed in the background.",
      "timestamp": "2023-02-01T17:58:20Z",
      "author": {
        "name": "Adam Obuchowicz"
      },
      "url": "https://github.com/enso-org/enso/commit/a103c8d82f3c1688a4791da31560384acb2399f2"
    }
  },
  "label_score_dict": {
    "org.enso.interpreter.bench.benchmarks.RuntimeCacheBenchmarks.benchCacheGet": 0.007712486995791158,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverComputingProxy": 0.17266270655166335,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverDelegatingProxy": 6.101693383325639,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverVector": 1.9649479188216084,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverVectorBackedByComputingProxy": 0.1442242928667419,
    "org.enso.interpreter.bench.benchmarks.semantic.ArrayProxyBenchmarks.sumOverVectorBackedByDelegatingProxy": 13.57172218777519,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchGenerateList": 3.6762521031927746,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchGenerateListQualified": 3.6254385729181755,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchMapReverseCurryList": 8.813349302244752,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchMapReverseList": 7.8018355599082785,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchReverseList": 8.816917483957752,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchReverseListMethods": 9.922542267178553,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchSumList": 3.909083962803801,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchSumListFallback": 9.805212201168874,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.benchSumListMethods": 4.343702756346767,
    "org.enso.interpreter.bench.benchmarks.semantic.AtomBenchmarks.sumListLeftFold": 4.136619399220568,
    "org.enso.interpreter.bench.benchmarks.semantic.CallableBenchmarks.benchSumTCOfromCall": 96.30976087241794,
    "org.enso.interpreter.bench.benchmarks.semantic.CallableBenchmarks.benchSumTCOmethodCall": 96.28203604765604,
    "org.enso.interpreter.bench.benchmarks.semantic.CallableBenchmarks.benchSumTCOmethodCallWithDefaultedArguments": 96.20336255049467,
    "org.enso.interpreter.bench.benchmarks.semantic.CallableBenchmarks.benchSumTCOmethodCallWithNamedArguments": 96.238130042589,
    "org.enso.interpreter.bench.benchmarks.semantic.CurriedFunctionBenchmarks.averageCurried": 0.12898145668981814,
    "org.enso.interpreter.bench.benchmarks.semantic.CurriedFunctionBenchmarks.averageLambda": 0.147868425231032,
    "org.enso.interpreter.bench.benchmarks.semantic.EqualsBenchmarks.equalsPrimitives": 0.16773639965953557,
    "org.enso.interpreter.bench.benchmarks.semantic.EqualsBenchmarks.equalsStrings": 0.08930073531043406,
    "org.enso.interpreter.bench.benchmarks.semantic.EqualsBenchmarks.equalsTrees": 1.895342959863498,
    "org.enso.interpreter.bench.benchmarks.semantic.ListBenchmarks.mapOverList": 139.21717297168948,
    "org.enso.interpreter.bench.benchmarks.semantic.NamedDefaultedArgumentBenchmarks.benchSumTCOWithDefaultArgs": 96.27677260007398,
    "org.enso.interpreter.bench.benchmarks.semantic.NamedDefaultedArgumentBenchmarks.benchSumTCOWithNamedArgs": 96.222339517411,
    "org.enso.interpreter.bench.benchmarks.semantic.NestedPatternCompilationBenchmarks.sumList": 0.20213850234657116,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchNestedThunkSum": 89.59270055170205,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchOversaturatedRecursiveCall": 96.25126124478965,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumRecursive": 0.0010383089396154691,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumStateTCO": 89.45240540279141,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumTCO": 96.26025528417938,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumTCOFoldLike": 96.22525757743874,
    "org.enso.interpreter.bench.benchmarks.semantic.RecursionBenchmarks.benchSumTCOWithEval": 96.2684969628294,
    "org.enso.interpreter.bench.benchmarks.semantic.StringBenchmarks.lengthOfStrings": 0.038721653891039265,
    "org.enso.interpreter.bench.benchmarks.semantic.TypePatternBenchmarks.matchOverAny": 0.012522654998896718,
    "org.enso.interpreter.bench.benchmarks.semantic.TypePatternBenchmarks.matchOverDecimal": 0.010351941995300734,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageAbstractList": 0.12775587113292458,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverArray": 0.0014064252635876645,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverArrayProxy": 0.0015105100048991944,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverArrayProxyNew": 0.0015442116546770224,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverPolyglotArray": 0.0014180374097733373,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverPolyglotVector": 0.001384131326223129,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverSlice": 0.001764068982399136,
    "org.enso.interpreter.bench.benchmarks.semantic.VectorBenchmarks.averageOverVector": 0.001405491324911192
  }
}